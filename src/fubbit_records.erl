-module(fubbit_records).

-compile({parse_transform, exprecs}).

-include("amqp_client/include/amqp_client.hrl").

-export_records([
   'connection.start'
  ,'connection.start_ok'
  ,'connection.secure'
  ,'connection.secure_ok'
  ,'connection.tune'
  ,'connection.tune_ok'
  ,'connection.open'
  ,'connection.open_ok'
  ,'connection.close'
  ,'connection.close_ok'
  ,'connection.redirect'
  ,'channel.open'
  ,'channel.open_ok'
  ,'channel.flow'
  ,'channel.flow_ok'
  ,'channel.close'
  ,'channel.close_ok'
  ,'channel.alert'
  ,'access.request'
  ,'access.request_ok'
  ,'exchange.declare'
  ,'exchange.declare_ok'
  ,'exchange.delete'
  ,'exchange.delete_ok'
  ,'exchange.bind'
  ,'exchange.bind_ok'
  ,'exchange.unbind'
  ,'exchange.unbind_ok'
  ,'queue.declare'
  ,'queue.declare_ok'
  ,'queue.bind'
  ,'queue.bind_ok'
  ,'queue.purge'
  ,'queue.purge_ok'
  ,'queue.delete'
  ,'queue.delete_ok'
  ,'queue.unbind'
  ,'queue.unbind_ok'
  ,'basic.qos'
  ,'basic.qos_ok'
  ,'basic.consume'
  ,'basic.consume_ok'
  ,'basic.cancel'
  ,'basic.cancel_ok'
  ,'basic.publish'
  ,'basic.return'
  ,'basic.deliver'
  ,'basic.get'
  ,'basic.get_ok'
  ,'basic.get_empty'
  ,'basic.ack'
  ,'basic.reject'
  ,'basic.recover_async'
  ,'basic.recover'
  ,'basic.recover_ok'
  ,'basic.nack'
  ,'tx.select'
  ,'tx.select_ok'
  ,'tx.commit'
  ,'tx.commit_ok'
  ,'tx.rollback'
  ,'tx.rollback_ok'
  ,'confirm.select'
  ,'confirm.select_ok'
  ,'file.qos'
  ,'file.qos_ok'
  ,'file.consume'
  ,'file.consume_ok'
  ,'file.cancel'
  ,'file.cancel_ok'
  ,'file.open'
  ,'file.open_ok'
  ,'file.stage'
  ,'file.publish'
  ,'file.return'
  ,'file.deliver'
  ,'file.ack'
  ,'file.reject'
  ,'stream.qos'
  ,'stream.qos_ok'
  ,'stream.consume'
  ,'stream.consume_ok'
  ,'stream.cancel'
  ,'stream.cancel_ok'
  ,'stream.publish'
  ,'stream.return'
  ,'stream.deliver'
  ,'dtx.select'
  ,'dtx.select_ok'
  ,'dtx.start'
  ,'dtx.start_ok'
  ,'tunnel.request'
  ,'test.integer'
  ,'test.integer_ok'
  ,'test.string'
  ,'test.string_ok'
  ,'test.table'
  ,'test.table_ok'
  ,'test.content'
  ,'test.content_ok'
  ,'P_connection'
  ,'P_channel'
  ,'P_access'
  ,'P_exchange'
  ,'P_queue'
  ,'P_basic'
  ,'P_tx'
  ,'P_confirm'
  ,'P_file'
  ,'P_stream'
  ,'P_dtx'
  ,'P_tunnel'
  ,'P_test'
  ,amqp_msg
  ,amqp_params_network
  ,amqp_params_direct
  ,amqp_adapter_info
]).

-export([
   to_list/2
]).
to_list(Record, Data) ->
  [{'#', Record} | 
    [ {X, fubbit_records:'#get-'(X, Data)} || X <- fubbit_records:'#info-'(Record, fields)] 
  ].
